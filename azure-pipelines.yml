# C/C++ with GCC
# Build your C/C++ project with GCC using make.
# Add steps that publish test results, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/c-cpp/gcc

trigger:
- master

jobs:
- job: Linux
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - script: echo hello from Linux

  - task: SonarCloudPrepare@1
    inputs:
      SonarCloud: '03db7951-faab-44df-a0dd-5bfcd6734227'
      organization: 'jfpanisset-github'
      scannerMode: 'CLI'
      configMode: 'manual'
      cliProjectKey: 'jfpanisset_openexr'
      cliProjectName: 'openexr'
      extraProperties: |  
        sonar.sourceEncoding=UTF-8        
        sonar.cpp.std=c++14
        sonar.cfamily.build-wrapper-output=bw-output 
  - bash: |
      curl -O https://sonarcloud.io/static/cpp/build-wrapper-linux-x86.zip
      unzip build-wrapper-linux-x86.zip
    displayName: Download Sonar build wrapper
  - bash: |
      echo "##vso[task.prependpath]$CONDA/bin"
    displayName: Add Conda to PATH
  - bash: |
      conda config --add channels conda-forge
      conda create --yes --quiet --name myOpenEXRenv python=2.7.15 boost=1.69.0 zlib=1.2.11 numpy=1.14
    displayName: Create Conda environment
  - bash: |
      source activate myOpenEXRenv
      cmake -DCMAKE_PREFIX_PATH=$CONDA_PREFIX -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX -G "Unix Makefiles" .
    displayName: Generate Makefiles with Cmake on Linux
  - bash: |
      build-wrapper-linux-x86/build-wrapper-linux-x86-64 --out-dir bw-output make clean all
    displayName: Build OpenEXR on Linux with SonarCloud build wrapper
  - task: SonarCloudAnalyze@1
    displayName: Run SonarCloud analysis
    enabled: true

- job: macOS
  pool:
    vmImage: 'macOS-10.14'
  steps:
  - script: echo hello from macOS
  - task: SonarCloudPrepare@1
    inputs:
      SonarCloud: '03db7951-faab-44df-a0dd-5bfcd6734227'
      organization: 'jfpanisset-github'
      scannerMode: 'CLI'
      configMode: 'manual'
      cliProjectKey: 'jfpanisset_openexr'
      cliProjectName: 'openexr'
      extraProperties: |  
        sonar.sourceEncoding=UTF-8        
        sonar.cpp.std=c++14
        sonar.cfamily.build-wrapper-output=bw-output
  - bash: |
      curl -O https://sonarcloud.io/static/cpp/build-wrapper-macosx-x86.zip
      unzip build-wrapper-macosx-x86.zip
    displayName: Download Sonar build wrapper
  # On Hosted macOS, the agent user doesn't have ownership of Miniconda's installation directory
  # We need to take ownership if we want to update conda or install packages globally
  - bash: |
      echo "##vso[task.prependpath]$CONDA/bin"
      sudo chown -R $USER $CONDA
    displayName: Add Conda to PATH
  - bash: |
      conda config --add channels conda-forge
      conda create --yes --quiet --name myOpenEXRenv python=2.7.15 boost=1.69.0 zlib=1.2.11 numpy=1.14
    displayName: Create Conda environment
  - bash: |
      source activate myOpenEXRenv
      cmake -DCMAKE_PREFIX_PATH=$CONDA_PREFIX -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX -G "Unix Makefiles" .
    displayName: Generate Makefiles with Cmake on macOS
  - bash: |
      build-wrapper-macosx-x86/build-wrapper-macosx-x86 --out-dir bw-output make clean all
    displayName: Build OpenEXR on macOS with SonarCloud build wrapper
  - task: SonarCloudAnalyze@1
    displayName: Run SonarCloud analysis
    enabled: true
   
- job: Windows
  pool:
    vmImage: 'vs2017-win2016'
  steps:
  - script: echo hello from Windows
  - task: SonarCloudPrepare@1
    inputs:
      SonarCloud: '03db7951-faab-44df-a0dd-5bfcd6734227'
      organization: 'jfpanisset-github'
      scannerMode: 'CLI'
      configMode: 'manual'
      cliProjectKey: 'jfpanisset_openexr'
      cliProjectName: 'openexr'
      extraProperties: |  
        sonar.sourceEncoding=UTF-8        
        sonar.cpp.std=c++14
        sonar.cfamily.build-wrapper-output=bw-output
  - powershell: |  
      [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
      Invoke-WebRequest -Uri http://sonarcloud.io/static/cpp/build-wrapper-win-x86.zip -OutFile build-wrapper-win.zip;       
      Expand-Archive -Path .\build-wrapper-win.zip -DestinationPath ./ ;
      Copy-Item .\build-wrapper-win-x86\build-wrapper-win-x86-64.exe ./ ;       
    displayName: Download Sonar build wrapper
  - powershell: |
      Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
    displayName: Add Conda to PATH
  - script: |
      conda config --add channels conda-forge
      conda create --yes --quiet --name myOpenEXRenv python=2.7.15 boost=1.69.0 zlib=1.2.11 numpy=1.14
    displayName: Create Conda environment
  # On Windows cmake doesn't seem to find Python 2.7 libraries unless we tell it explicitly, may be
  # related to find_package(PythonLibs) being obsolete is newer cmake versions.
  - script: |
      call activate myOpenEXRenv
      cmake -DCMAKE_PREFIX_PATH=%CONDA_PREFIX% -DCMAKE_INSTALL_PREFIX=%CONDA_PREFIX% -DPYTHON_INCLUDE_DIR=%CONDA_PREFIX%\include -DPYTHON_LIBRARY=%CONDA_PREFIX%\libs\python27.lib -G "Visual Studio 15 2017 Win64" .
    displayName: Generate Visual Studio Solution with CMake on Windows
  - script: |
      call activate myOpenEXRenv
      build-wrapper-win-x86-64.exe --out-dir bw-output cmake --build . --config Release
    displayName: Build with Sonar build wrapper
  - task: SonarCloudAnalyze@1
    displayName: Run SonarCloud analysis
    enabled: true
